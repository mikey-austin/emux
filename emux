#!/usr/bin/perl

use strict;
use warnings;

use Emux::Server;
use Emux::Config;
use Emux::Logger;
use Getopt::Long;
use Pod::Usage;

my $options = Emux::Config::DEFAULTS;
my $help = 0;
my $version = 0;
my $config_file = $ENV{EMUX_CONFIG} || '';

GetOptions(
    "daemon"    => \$options->{daemonize},
    "socket=s"  => \$options->{socket},
    "pidfile=s" => \$options->{pidfile},
    "user=s"    => \$options->{user},
    "group=s"   => \$options->{group},
    "host=s"    => \$options->{host},
    "port=s"    => \$options->{port},
    "logger=s"  => \$options->{logger},
    "stdin"     => \$options->{listen_stdin},
    "stdout"    => \$options->{broadcast_stdout},
    "config=s"  => \$config_file,
    "help"      => \$help,
    "version"   => \$version)
    or pod2usage(1) and die("Error in command line arguments\n");

my $config = Emux::Config->new($config_file)->merge($options);
if ($version) {
    print 'Emux version ', $config->VERSION, "\n";
    pod2usage(1);
}

if ($help) {
    pod2usage(1);
}

my $logger = Emux::Logger->new($config);
my $server = Emux::Server->new($config, $logger);
eval {
    $server->start;
    1;
} or do {
    my $error = $@;
    $server->shutdown($error)
        if $error;
};
